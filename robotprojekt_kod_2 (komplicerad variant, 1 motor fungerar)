#include <stdio.h>
#include "ev3.h"
#include "ev3_port.h"
#include "ev3_tacho.h"
#include "ev3_light.h"
#include "ev3_port.h"
#include "ev3_dc.h"
#include "ev3_servo.h"
#include "coroutine.h"

// WIN32 /////////////////////////////////////////
#ifdef __WIN32__

#include <windows.h>

// UNIX //////////////////////////////////////////
#else

#include <unistd.h>
#define Sleep( msec ) usleep(( msec ) * 1000 )

#endif

int main(void)
{

	int i;
        uint8_t sn;
        FLAGS_T state;
        char s[ 256 ];

        int max_speed;

        get_tacho_max_speed( sn, &max_speed );
        printf("  max_speed = %d\n", max_speed );
        set_tacho_stop_action_inx( sn, TACHO_COAST );
        set_tacho_speed_sp( sn, max_speed * 2 / 3 );
        set_tacho_time_sp( sn, 5000 );
        set_tacho_ramp_up_sp( sn, 2000 );
        set_tacho_ramp_down_sp( sn, 2000 );
        set_tacho_command_inx( sn, TACHO_RUN_TIMED );
        /* Wait tacho stop */
        Sleep( 100 );
        do {
            get_tacho_state_flags( sn, &state );
        } while ( state );
        printf( "run to relative position...\n" );
        set_tacho_speed_sp( sn, max_speed / 2 );
        set_tacho_ramp_up_sp( sn, 0 );
        set_tacho_ramp_down_sp( sn, 0 );
        set_tacho_position_sp( sn, 90 );
        for ( i = 0; i < 8; i++ ) {
            set_tacho_command_inx( sn, TACHO_RUN_TO_REL_POS );
            Sleep( 500 );
        }

	return 0;
    }
